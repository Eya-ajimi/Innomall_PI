package tn.esprit.gui;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javafx.stage.Stage;
import tn.esprit.entites.Poste;
import tn.esprit.services.PostService;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;

public class HomePageController {

    @FXML
    private VBox postsContainer;  // This is the container for all posts

    @FXML
    private TextField postTextField;  // TextField where the user writes the post content

    @FXML
    private Button addPostButton;  // Button to trigger adding a post

    private final PostService postService = new PostService();

    @FXML
    public void initialize() {
        loadPosts();  // Load posts when the page initializes
        setupAddPostButton();  // Setup the button to add a post
        initializeWebView(); // Initialize WebView
    }
/******** map part****/

    @FXML private WebView mapWebView; // WebView declaration
    private void initializeMap() {
        WebEngine webEngine = mapWebView.getEngine();
        String htmlContent = """
        <!DOCTYPE html>
        <html>
        <head>
            <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
            <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
        </head>
        <body>
            <div id="map" style="height: 100%; width: 100%;"></div>
            <script>
                var map = L.map('map').setView([36.8989, 10.1895], 15);
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
                L.marker([36.8989, 10.1895]).addTo(map).bindPopup('InnoMall');
            </script>
        </body>
        </html>
        """;
        webEngine.loadContent(htmlContent);
    }



    // Setup the Add Post button's action
    private void setupAddPostButton() {
        addPostButton.setOnAction(event -> {
            String postContent = postTextField.getText().trim();  // Trim to remove extra spaces
            if (postContent.isEmpty()) {
                showAlert("Erreur", "you can't add an empty post !");
            } else {
                Poste newPost = new Poste();
                newPost.setContenu(postContent);
                newPost.setUtilisateurId(17);  // Example user ID, replace with actual user ID if needed

                try {
                    // Insert the post into the database
                    int postId = postService.insert(newPost);

                    // Set the post ID and add it to the UI
                    newPost.setId(postId);
                    addPostToUI(newPost);
                } catch (SQLException e) {
                    e.printStackTrace();  // Handle the exception properly
                }
            }
        });
    }

    // Method to show an alert dialog
    private void showAlert(String title, String message) {
        Alert alert = new Alert(Alert.AlertType.WARNING);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    // Add the new post to the posts container (UI)
    private void addPostToUI(Poste post) {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/PostItem.fxml"));
            VBox postBox = loader.load();

            // Get the PostItemController and set post data
            PostItemController controller = loader.getController();
            controller.setPostData(post);

            // Add the post box with its comments to the posts container
            postsContainer.getChildren().add(postBox);

            // Clear the TextField after posting
            postTextField.clear();
        } catch (IOException e) {
            e.printStackTrace();  // Handle the exception properly
        }
    }

    // Load posts and their associated comments
    private void loadPosts() {
        try {
            List<Poste> posts = postService.showAll();  // Get all posts

            // Iterate through each post
            for (Poste post : posts) {
                addPostToUI(post);  // Add the post to the UI
            }
        } catch (SQLException e) {
            e.printStackTrace();  // Log the error
        }
    }
    /**************** redirect****/

    @FXML

    private void handleShopsClick() {
        try {
            // Load the Shops.fxml file
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/Shops.fxml"));
            Pane shopsPage = loader.load();

            // Get the current stage
            Stage stage = (Stage) postsContainer.getScene().getWindow(); // Use an existing node to get the stage
            stage.setScene(new Scene(shopsPage));
            stage.show();

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

}

